{"version":3,"sources":["redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","services/contactsAPI.js","redux/store.js","constants/theme.js","components/container/Container.styled.jsx","components/container/Container.js","components/section/Section.styled.jsx","components/section/Section.js","components/contactForm/ContactForm.styled.jsx","components/contactForm/ContactForm.js","redux/phonebook/phonebook-selectors.js","components/contactListItem/ContactListItem.styled.jsx","components/contactListItem/ContactListItem.js","components/contactList/ContactList.styled.jsx","components/contactList/ContactList.js","components/contactFilter/ContactFilter.styled.jsx","components/contactFilter/ContactFilter.js","components/header/Header.styled.jsx","components/header/Header.js","App.js","index.js"],"names":["changeFilter","createAction","filter","createReducer","actions","_","payload","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getContacts","query","providesTags","result","map","type","id","addContact","mutation","newContact","url","method","body","invalidatesTags","deleteContact","contactID","useGetContactsQuery","useAddContactMutation","useDeleteContactMutation","store","configureStore","reducer","middleware","getDefaultMiddleware","devTools","process","theme","Object","freeze","colors","primary","white","borderColor","textColor","inputBoxShadow","loader","justifyContent","marginTop","btnLoader","alignIitems","Box","styled","div","Container","children","Title","h2","Section","title","FormContacts","form","props","InputLabel","label","FormInput","input","FormButton","button","ContactForm","useState","name","setName","number","setNumber","contacts","data","error","isLoading","handleNameChange","event","currentTarget","value","onSubmit","preventDefault","normalizedName","toLowerCase","replace","normalizedNumber","some","contact","phone","isInContacts","alert","onChange","pattern","required","disabled","getFilter","state","ListItem","li","Text","p","ItemBtn","ContactListItem","useTheme","onDelete","isDeleting","onClick","ariaLabel","color","wrapperStyle","height","width","List","ul","ContactList","useSelector","selectors","normalizedFilter","filteredContacts","includes","ContactFilter","dispatch","useDispatch","Header","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc01f1a9.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\nconst changeFilter = createAction('phonebook/changeFilter');\n\nexport { changeFilter };\n","import { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './phonebook-actions';\n\nexport const filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const contactsApi = createApi({\r\n  reducerPath: 'contactsApi',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://61dd6565f60e8f0017668798.mockapi.io',\r\n  }),\r\n  tagTypes: ['Contacts'],\r\n  endpoints: builder => ({\r\n    getContacts: builder.query({\r\n      query: () => '/contacts',\r\n      providesTags: result =>\r\n        result\r\n          ? result.map(({ id }) => ({ type: 'Contacts', id }))\r\n          : ['Contacts'],\r\n    }),\r\n    addContact: builder.mutation({\r\n      query: newContact => ({\r\n        url: `/contacts`,\r\n        method: 'POST',\r\n        body: newContact,\r\n      }),\r\n      invalidatesTags: ['Contacts'],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: contactID => ({\r\n        url: `/contacts/${contactID}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Contacts'],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetContactsQuery,\r\n  useAddContactMutation,\r\n  useDeleteContactMutation,\r\n} = contactsApi;\r\n","import { configureStore } from '@reduxjs/toolkit';\nimport { filter } from './phonebook/phonebook-reducer';\nimport { contactsApi } from 'services/contactsAPI';\n\nexport const store = configureStore({\n  reducer: {\n    filter,\n    [contactsApi.reducerPath]: contactsApi.reducer,\n  },\n  middleware: getDefaultMiddleware => [\n    ...getDefaultMiddleware(),\n    contactsApi.middleware,\n  ],\n  devTools: process.env.NODE_ENV === 'development',\n});\n","export const theme = Object.freeze({\n  colors: {\n    primary: '#57d0e6',\n    white: '#fff',\n    borderColor: '#bdbdbd',\n    textColor: '#212529',\n    inputBoxShadow: '0 0 0 0.2rem rgba(87, 208, 230, 0.5)',\n  },\n\n  loader: {\n    justifyContent: 'center',\n    marginTop: '2rem',\n  },\n\n  btnLoader: {\n    justifyContent: 'center',\n    alignIitems: 'center',\n  },\n});\n","import styled from '@emotion/styled';\n\nexport const Box = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1170px;\n  padding: 15px;\n`;\n","import PropTypes from 'prop-types';\nimport { Box } from './Container.styled';\n\nconst Container = ({ children }) => {\n  return <Box>{children}</Box>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import styled from '@emotion/styled';\n\nexport const Box = styled.div`\n  margin-top: 15px;\n  margin-bottom: 15px;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 500;\n  text-transform: uppercase;\n`;\n","import PropTypes from 'prop-types';\nimport { Box, Title } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <Box>\n      <Title>{title}</Title>\n      {children}\n    </Box>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import styled from '@emotion/styled';\n\nexport const FormContacts = styled.form`\n  border: ${props => `2px solid ${props.theme.colors.primary}`};\n  padding: 30px;\n  width: 500px;\n`;\n\nexport const InputLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-weight: 500;\n  font-size: 1.5rem;\n  margin-bottom: 20px;\n`;\n\nexport const FormInput = styled.input`\n  width: 300px;\n  margin-top: 5px;\n\n  padding: 0.375rem 0.75rem;\n  font-family: inherit;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: ${props => props.theme.colors.textColor};\n  border: ${props => `1px solid ${props.theme.colors.borderColor}`};\n  border-radius: 0.25rem;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n\n  &:focus {\n    border-color: ${props => props.theme.colors.primary};\n    outline: 0;\n    box-shadow: ${props => props.theme.colors.inputBoxShadow};\n  }\n`;\n\nexport const FormButton = styled.button`\n  background-color: transparent;\n  padding: 5px 10px;\n  border-radius: 5px;\n  width: 120px;\n  font-size: 1rem;\n  transition: background-color 300ms ease-in-out, color 300ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.white};\n    outline: 0;\n    cursor: pointer;\n    background-color: ${props => props.theme.colors.primary};\n  }\n`;\n","import { useState } from 'react';\nimport {\n  useGetContactsQuery,\n  useAddContactMutation,\n} from 'services/contactsAPI';\n\nimport {\n  FormContacts,\n  InputLabel,\n  FormInput,\n  FormButton,\n} from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const { data: contacts, error } = useGetContactsQuery();\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const handleNameChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const ressetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const isInContacts = ({ name, number }) => {\n    const normalizedName = name.toLowerCase().replace(/\\s+/g, '');\n    const normalizedNumber = number.replace(/\\D/g, '');\n    return contacts.some(contact => {\n      return (\n        contact.name.toLowerCase().replace(/\\s+/g, '') === normalizedName ||\n        contact.phone.replace(/\\D/g, '') === normalizedNumber\n      );\n    });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    if (isInContacts({ name, number })) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    addContact({ name, phone: number });\n    ressetForm();\n  };\n\n  return (\n    <FormContacts onSubmit={onSubmit}>\n      <InputLabel>\n        Name\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleNameChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </InputLabel>\n\n      <InputLabel>\n        Number\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleNameChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </InputLabel>\n      <FormButton type=\"submit\" disabled={isLoading}>\n        {isLoading ? 'Adding...' : 'Add contact'}\n      </FormButton>\n    </FormContacts>\n  );\n};\n\nexport default ContactForm;\n","export const getFilter = state => state.filter;\n","import styled from '@emotion/styled';\r\n\r\nexport const ListItem = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border-bottom: ${props => `1px solid ${props.theme.colors.primary}`};\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  font-size: 1.1rem;\r\n`;\r\n\r\nexport const ItemBtn = styled.button`\r\n  background-color: transparent;\r\n  padding: 5px 10px;\r\n  border-radius: 5px;\r\n  width: 75px;\r\n  font-size: 0.8rem;\r\n  transition: background-color 300ms ease-in-out, color 300ms ease-in-out;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    color: ${props => props.theme.colors.white};\r\n    outline: 0;\r\n    cursor: pointer;\r\n    background-color: ${props => props.theme.colors.primary};\r\n  }\r\n`;\r\n","import { Circles } from 'react-loader-spinner';\r\nimport { useTheme } from '@emotion/react';\r\nimport { useDeleteContactMutation } from 'services/contactsAPI';\r\n\r\nimport { ListItem, Text, ItemBtn } from './ContactListItem.styled';\r\n\r\nexport const ContactListItem = ({ id, name, phone }) => {\r\n  const theme = useTheme();\r\n  const [onDelete, { isLoading: isDeleting }] = useDeleteContactMutation();\r\n\r\n  return (\r\n    <ListItem>\r\n      <Text>\r\n        {name}: {phone}\r\n      </Text>\r\n      <ItemBtn type=\"button\" onClick={() => onDelete(id)} disabled={isDeleting}>\r\n        {isDeleting ? (\r\n          <Circles\r\n            ariaLabel=\"loading-indicator\"\r\n            color={`${theme.colors.white}`}\r\n            wrapperStyle={theme.btnLoader}\r\n            height={20}\r\n            width={20}\r\n          />\r\n        ) : (\r\n          'Delete'\r\n        )}\r\n      </ItemBtn>\r\n    </ListItem>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 0;\n  width: 380px;\n`;\n","import { useSelector } from 'react-redux';\nimport { selectors } from 'redux/phonebook';\nimport { useGetContactsQuery } from 'services/contactsAPI';\n\nimport { ContactListItem } from '../contactListItem/ContactListItem';\nimport { List } from './ContactList.styled';\n\nconst ContactList = () => {\n  const filter = useSelector(selectors.getFilter);\n  const { data: contacts, error } = useGetContactsQuery();\n\n  const normalizedFilter = filter.toLowerCase();\n\n  let filteredContacts = [];\n  if (contacts) {\n    filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  }\n\n  return (\n    <>\n      {/* {isFetching && (\n        <Grid\n          ariaLabel=\"loading-indicator\"\n          color={`${theme.colors.primary}`}\n          wrapperStyle={theme.loader}\n        />\n      )} */}\n      {contacts && (\n        <List>\n          {filteredContacts.map(contact => (\n            <ContactListItem key={contact.id} {...contact} />\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const InputLabel = styled.label`\n  font-size: 1.1rem;\n  font-weight: 500;\n`;\n\nexport const FormInput = styled.input`\n  margin-left: 20px;\n\n  padding: 0.2rem 0.4rem;\n  color: ${props => props.theme.colors.textColor};\n  border: ${props => `1px solid ${props.theme.colors.borderColor}`};\n  border-radius: 0.25rem;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n\n  &:focus {\n    border-color: ${props => props.theme.colors.primary};\n    outline: 0;\n    box-shadow: ${props => props.theme.colors.inputBoxShadow};\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectors, actions } from 'redux/phonebook';\nimport { InputLabel, FormInput } from './ContactFilter.styled';\n\nconst ContactFilter = () => {\n  const filter = useSelector(selectors.getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <InputLabel>\n      Find contacts by name:\n      <FormInput\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={event =>\n          dispatch(actions.changeFilter(event.currentTarget.value))\n        }\n      ></FormInput>\n    </InputLabel>\n  );\n};\n\nexport default ContactFilter;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  text-align: center;\n  background-color: ${props => props.theme.colors.primary};\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './Header.styled';\n\nconst Header = ({ title, children }) => {\n  return (\n    <>\n      <Title>{title}</Title>\n      {children}\n    </>\n  );\n};\n\nHeader.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Header;\n","import Container from 'components/container/Container';\nimport Section from 'components/section/Section';\nimport ContactForm from 'components/contactForm/ContactForm';\nimport ContactList from 'components/contactList/ContactList';\n// import initData from 'tempData/data.json';\nimport ContactFilter from 'components/contactFilter/ContactFilter';\nimport Header from 'components/header/Header';\n\nconst App = () => {\n  return (\n    <Header title=\"Phonebook\">\n      <Container>\n        <Section title={'Phonebook'}>\n          <ContactForm />\n        </Section>\n\n        <Section title={'Contacts'}>\n          <ContactFilter />\n          <ContactList />\n        </Section>\n      </Container>\n    </Header>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { store } from 'redux/store';\n\nimport { ThemeProvider } from '@emotion/react';\nimport { theme } from 'constants/theme';\nimport 'index.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport App from 'App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}